<template>
    <div class="app-container">
        <el-form :model="queryParams" ref="queryForm" size="small" :inline="true" v-show="showSearch" label-width="68px">
            <el-form-item label="主键" prop="testId">
                <el-input
                    v-model="queryParams.testId"
                    placeholder="请输入主键"
                    clearable
                    @keyup.enter.native="handleQuery"
                />
            </el-form-item>
            <el-form-item label="测试名" prop="testName">
                <el-input
                    v-model="queryParams.testName"
                    placeholder="请输入测试名"
                    clearable
                    @keyup.enter.native="handleQuery"
                />
            </el-form-item>
            <el-form-item label="过期时间">
                <el-date-picker
                    v-model="daterangeOutDate"
                    style="width: 240px"
                    value-format="yyyy-MM-dd"
                    type="daterange"
                    range-separator="-"
                    start-placeholder="开始日期"
                    end-placeholder="结束日期"
                ></el-date-picker>
            </el-form-item>
            <el-form-item label="性别" prop="gender">
                <el-select v-model="queryParams.gender" placeholder="请选择性别" clearable>
                <el-option
                    v-for="dict in dict.type.sys_user_sex"
                    :key="dict.value"
                    :label="dict.label"
                    :value="dict.value"
                />
                </el-select>
            </el-form-item>
            <el-form-item label="性别" prop="gender">
                <el-select v-model="queryParams.gender" placeholder="请选择性别" clearable>
                    <el-option label="请选择字典生成" value=""/>
                </el-select>
            </el-form-item>
            <el-form-item>
                <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
                <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
            </el-form-item>
        </el-form>

        <el-row :gutter="10" class="mb8">
            <el-col :span="1.5">
                <el-button type="primary" plain icon="el-icon-plus" size="mini" @click="handleAdd"
                    v-hasPermi="['admin:test:add']">新增</el-button>
            </el-col>
            <el-col :span="1.5">
                <el-button type="success" plain icon="el-icon-edit" size="mini" :disabled="single" @click="handleUpdate"
                    v-hasPermi="['admin:test:edit']">修改</el-button>
            </el-col>
            <el-col :span="1.5">
                <el-button type="danger" plain icon="el-icon-delete" size="mini" :disabled="multiple" @click="handleDelete"
                    v-hasPermi="['admin:test:remove']">删除</el-button>
            </el-col>
            <el-col :span="1.5">
                <el-button type="warning" plain icon="el-icon-download" size="mini" @click="handleExport"
                    v-hasPermi="['admin:test:export']">导出</el-button>
            </el-col>
            <right-toolbar :showSearch.sync="showSearch" @queryTable="getList"></right-toolbar>
        </el-row>

        <el-table v-loading="loading" :data="testList" @selection-change="handleSelectionChange">
            <el-table-column type="selection" width="55" align="center" />
            <el-table-column label="主键" align="center" prop="testId" />
            <el-table-column label="测试名" align="center" prop="testName"/>
            <el-table-column label="过期时间" align="center" prop="outDate" width="180">
                <template slot-scope="scope">
                  <span> {{  parseTime(scope.row.outDate, '{y}-{m}-{d}')  }} </span>
                </template>
            </el-table-column>
            <el-table-column label="头像地址" align="center" prop="avatarUrl" width="100">
                <template slot-scope="scope">
                  <image-preview :src="scope.row.avatarUrl" :width="50" :height="50"/>
                </template>
            </el-table-column>
            <el-table-column label="性别" align="center" prop="gender">
                <template slot-scope="scope">
                      <dict-tag :options="dict.type.sys_user_sex" :value="scope.row.gender"/>
                </template>
            </el-table-column>
            <el-table-column label="创建者" align="center" prop="createBy"/>
            <el-table-column label="创建时间" align="center" prop="createTime"/>
            <el-table-column label="操作" align="center" class-name="small-padding fixed-width">
                <template slot-scope="scope">
                    <el-button size="mini" type="text" icon="el-icon-edit" @click="handleUpdate(scope.row)"
                        v-hasPermi="['admin:test:edit']">修改</el-button>
                    <el-button size="mini" type="text" icon="el-icon-delete" @click="handleDelete(scope.row)"
                        v-hasPermi="['admin:test:remove']">删除</el-button>
                </template>
            </el-table-column>
        </el-table>

        <pagination v-show="total > 0" :total="total" :page.sync="queryParams.pageNum" :limit.sync="queryParams.pageSize"
            @pagination="getList" />

        <!-- 添加或修改系统测试信息对话框 -->
        <el-dialog :title="title" :visible.sync="open" width="500px" append-to-body>
            <el-form ref="form" :model="form" :rules="rules" label-width="80px">
                <el-form-item label="测试名" prop="testName">
                    <el-input v-model="form.testName" placeholder="请输入测试名"/>
                </el-form-item>
                <el-form-item label="密码" prop="password">
                    <el-input v-model="form.password" placeholder="请输入密码"/>
                </el-form-item>
                <el-form-item label="头像地址" prop="avatarUrl">
                    <image-upload v-model="form.avatarUrl"/>
                </el-form-item>
                <el-form-item label="性别" prop="gender">
                    <el-select v-model="form.gender" placeholder="请选择性别">
                    <el-option
                        v-for="dict in dict.type.sys_user_sex"
                        :key="dict.value"
                        :label="dict.label"
                        :value="dict.value"
                    ></el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="备注" prop="remark">
                    <el-input v-model="form.remark" placeholder="请输入备注"/>
                </el-form-item>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button type="primary" @click="submitForm">确 定</el-button>
                <el-button @click="cancel">取 消</el-button>
            </div>
        </el-dialog>
    </div>
</template>
  
<script>
import { listTest, getTest, delTest, addTest, updateTest } from "@/api/system/test";

export default {
    name: "test",
    dicts: [sys_user_sex],
    data() {
        return {
            // 遮罩层
            loading: true,
            // 选中数组
            ids: [],
            // 非单个禁用
            single: true,
            // 非多个禁用
            multiple: true,
            // 显示搜索条件
            showSearch: true,
            // 总条数
            total: 0,
            // 系统测试信息表格数据
            testList: [],
            // 弹出层标题
            title: "",
            // 是否显示弹出层
            open: false,
            daterangeOutDate: [],
            // 查询参数
            queryParams: {
                pageNum: 1,
                pageSize: 10,
                testId: null,
                testName: null,
                outDate: null,
                gender: null,
                createTime: null,
            },
            // 表单参数
            form: {},
            // 表单校验
            rules: {
                testName: [
                    { required: true, message: "测试名不能为空", trigger: "blur" }
                ],
                password: [
                    { required: true, message: "密码不能为空", trigger: "blur" }
                ],
                avatarUrl: [
                    { required: true, message: "头像地址不能为空", trigger: "blur" }
                ],
                gender: [
                    { required: true, message: "性别不能为空", trigger: "change" }
                ],
            }
        };
    },
    created() {
        this.getList();
    },
    methods: {
        /** 查询系统测试信息列表 */
        getList() {
            this.loading = true;
            this.queryParams.params = {};

            if (null != this.daterangeOutDate && '' != this.daterangeOutDate) {
                this.queryParams.params["beginOutDate"] = this.daterangeOutDate[0];
                this.queryParams.params["endOutDate"] = this.daterangeOutDate[1];
            }

            listTest(this.queryParams).then(response => {
                this.testList = response.rows;
                this.total = response.total;
                this.loading = false;
            });
        },
        // 取消按钮
        cancel() {
            this.open = false;
            this.reset();
        },
        // 表单重置
        reset() {
            this.form = {
            testId:null,
            testName:null,
            password:null,
            outDate:null,
            avatarUrl:null,
            gender:null,
            createBy:null,
            updateBy:null,
            createTime:null,
            updateTime:null,
            remark:null,
            };
            this.resetForm("form");
        },
        /** 搜索按钮操作 */
        handleQuery() {
            this.queryParams.pageNum = 1;
            this.getList();
        },
        /** 重置按钮操作 */
        resetQuery() {
            this.daterangeOutDate = [];
            this.resetForm("queryForm");
            this.handleQuery();
        },
        // 多选框选中数据
        handleSelectionChange(selection) {
            this.ids = selection.map(item => item.testId)
            this.single = selection.length !== 1
            this.multiple = !selection.length
        },
        /** 新增按钮操作 */
        handleAdd() {
            this.reset();
            this.open = true;
            this.title = "添加系统测试信息";
        },
        /** 修改按钮操作 */
        handleUpdate(row) {
            this.reset();
            const testId = row.testId || this.ids
            getTest(testId).then(response => {
                this.form = response.data;
                this.open = true;
                this.title = "修改系统测试信息";
            });
        },
        /** 提交按钮 */
        submitForm() {
            this.$refs["form"].validate(valid => {
                if (valid) {
                    if (this.form.testId != null) {
                        updateTest(this.form).then(response => {
                            this.$modal.msgSuccess("修改成功");
                            this.open = false;
                            this.getList();
                        });
                    } else {
                        addTest(this.form).then(response => {
                            this.$modal.msgSuccess("新增成功");
                            this.open = false;
                            this.getList();
                        });
                    }
                }
            });
        },
        /** 删除按钮操作 */
        handleDelete(row) {
            const testIds = row.testId || this.ids;
            this.$modal.confirm('是否确认删除系统测试信息编号为"' + testIds + '"的数据项？').then(function () {
                return delTest(testIds);
            }).then(() => {
                this.getList();
                this.$modal.msgSuccess("删除成功");
            }).catch(() => { });
        },
        /** 导出按钮操作 */
        handleExport() {
            this.download('system/post/export', {
                ...this.queryParams
            }, `test_${new Date().getTime()}.xlsx`)
        }
    }
};
</script>
  